
==================== FINAL INTERFACE ====================
2019-08-12 12:24:30.424926 UTC

interface sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ:SEDEL.Target.Eval 8063
  interface hash: eb007d336f56bfb037a4f3ebd07b7ccf
  ABI hash: d4a518e8691cc4689cd380a50254192f
  export-list hash: e7aabfc57bb401bc8251ff2a0fa245ea
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e580f49babaf8084db70d01b7d5e6518
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  SEDEL.Target.Eval.evaluate
module dependencies: SEDEL.Common SEDEL.Target.Syntax
package dependencies: array-0.5.3.0 async-2.2.1 base-4.12.0.0
                      base-orphans-0.8 bifunctors-5.5.3 binary-0.8.6.0
                      bytestring-0.10.8.2 comonad-5.0.4 containers-0.6.0.1
                      deepseq-1.4.4.0 distributive-0.6 exceptions-0.10.0
                      ghc-boot-th-8.6.3 ghc-prim-0.5.3 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 mtl-2.2.2 profunctors-5.3 protolude-0.2.3
                      stm-2.5.0.0 tagged-0.8.6 template-haskell-2.14.0.0 text-1.2.3.1
                      transformers-0.5.5.0 unbound-generics-0.4.0
orphans: transformers-0.5.5.0:Control.Monad.Trans.Error
         stm-2.5.0.0:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type
                         sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ:SEDEL.Common
                         sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ:SEDEL.Target.Syntax
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Bind
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Embed
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Ignore
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Name
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Rebind
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Rec
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Shift
import  -/  base-4.12.0.0:Control.Monad.IO.Class e8f65a5571f64fe686cca3ac75a1aa0e
import  -/  base-4.12.0.0:Data.Either 946a3435d06773e1dbcad1ba5dc18a2c
import  -/  base-4.12.0.0:Data.IORef 30d8bbbd600bd9d9c6a9b4fea90cdc2e
import  -/  base-4.12.0.0:Data.Maybe 1e8e1362415df45376dffd98f8a47766
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.IORef 2192434d60e192a8992978faa80f48d7
import  -/  base-4.12.0.0:GHC.Num 847723f2584d989dac1eada133ac3fb8
import  -/  base-4.12.0.0:GHC.Real f7dad82c1d43d80823865d3e6c6636e0
import  -/  base-4.12.0.0:GHC.Show 4e438f26d903388cc6c2c5d64ed01b98
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  containers-0.6.0.1:Data.Map.Internal e652f5f18be5bf564604b214e5c1dad8
import  -/  containers-0.6.0.1:Data.Map.Strict c9c15d36149113668379264c6ca4bcc8
import  -/  containers-0.6.0.1:Data.Map.Strict.Internal 6df6fcb6b071f5a925d4fa53758ddeff
import  -/  ghc-prim-0.5.3:GHC.Classes e0d9c979f6368701f34fa421754d2cce
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  mtl-2.2.2:Control.Monad.Error.Class 396bb83814f3ba40535fffb311f79b73
import  -/  mtl-2.2.2:Control.Monad.Except 50e515fe4eac4821a9bcec9a647f5aa7
import  -/  SEDEL.Common ca6f88eb795bfe7d09e23d21fb3eb87f
  exports: 576471b9a47b800d5ba3919671488556
  Add 776209293c66bfbb867e64fd01ec5524
  Arith 477cbffa1e7281d92b0f71e3720dc821
  Comp 348f8575ea4d65185d0a29b6b8a92535
  Div 038c227c045fd71eab722d2d4ecf42f4
  Equ 67fac86250d28575acf5a4936b4d65f2
  Gt 09d0b76e11a0a36a8ec9bbc51138f538
  LAnd 61b95ad1d220eda80a50c7e39a9a6ef6
  LOr 5c15e5469fc495263fe77dda9252bfb5
  Logical 5837ab3db90e339a87f10215bf5c0d98
  Lt ec4763cf594c42d458ce6a69ab350bdf
  Mul 8b6e84ede92e2ad36aa9f079a7b05e08
  Neq a72a14e8f114dd3e7b3cb975e2df8af3
  Operation 2a0c91384ff6cefd07c7d1887666077f
  Sub 622974ee4a8131461dc7a2973ecbc9b1
import  -/  SEDEL.Target.Syntax f9564d1c960bf10a7f1f0df869d96941
  exports: 3e59938cb32396b7de7df23e937c55e6
  Bot 4ee45f94aacb68faee32c8a89921fad9
  UApp fa5ee9326502e89a57b058b06a5c05f3
  UBLam 89d032f6e4fe32a80a8b1df058d910a9
  UBoolV 4b953a54fe49819d377ec6400cfa4bc4
  UExpr 0e81733f87df4b0be304d19977d9bf74
  UIf 9653687c887ad85ee3bd307e24ed2334
  ULam b04a9244eb89c540a5e4501edd404970
  ULitV 58a8bba72b34e61fd3351a34d63922ac
  UName 0e81733f87df4b0be304d19977d9bf74
  UP1 e5b054447649162cf21129cc989d29f4
  UP2 34e98b38fc88b669d172f32a6944fb14
  UPair a397eb4b67637f678f27a246ad1256ad
  UPrimOp 415551e4514ac1b42b383f13d3c06f02
  UUnit b695a20c1fee2932ea9ae21489ee9132
  UVar b5ca6fcd7c0035d8ba87072c64642832
import  -/  transformers-0.5.5.0:Control.Monad.Trans.Except 492e1fc9e7bdded285216f81f05ba982
import  -/  unbound-generics-0.4.0:Unbound.Generics.LocallyNameless 36704d4dbfb3fb22f46cde363ae796f2
import  -/  unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Fresh e0f8d49fe8e0f78dfcabb34436892778
import  -/  unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Name 81d6e7baa0bd0880e550478df477614a
import  -/  unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Operations d0c219408974b95413509bf76023577c
778914aa0f61b54778137b67e53061bb
  $fShowThunk :: GHC.Show.Show SEDEL.Target.Eval.Thunk
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ SEDEL.Target.Eval.Thunk
                  SEDEL.Target.Eval.$fShowThunk_$cshowsPrec
                  SEDEL.Target.Eval.$fShowThunk_$cshow
                  SEDEL.Target.Eval.$fShowThunk_$cshowList -}
778914aa0f61b54778137b67e53061bb
  $fShowThunk1 ::
    SEDEL.Target.Eval.Thunk -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: SEDEL.Target.Eval.Thunk)
                   (s :: GHC.Base.String)[OneShot] ->
                 GHC.CString.unpackAppendCString# "<Thunk>"# s) -}
397501d43413bfa804ba20fc074af7b5
  $fShowThunk2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   SEDEL.Target.Eval.$fShowThunk3) -}
ec1d5cb84a250a4ea75cd2a6269e0e47
  $fShowThunk3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<Thunk>"#) -}
778914aa0f61b54778137b67e53061bb
  $fShowThunk_$cshow :: SEDEL.Target.Eval.Thunk -> GHC.Base.String
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: SEDEL.Target.Eval.Thunk) ->
                 SEDEL.Target.Eval.$fShowThunk2) -}
778914aa0f61b54778137b67e53061bb
  $fShowThunk_$cshowList ::
    [SEDEL.Target.Eval.Thunk] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [SEDEL.Target.Eval.Thunk]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ SEDEL.Target.Eval.Thunk
                   SEDEL.Target.Eval.$fShowThunk1
                   ls
                   s) -}
778914aa0f61b54778137b67e53061bb
  $fShowThunk_$cshowsPrec ::
    GHC.Types.Int -> SEDEL.Target.Eval.Thunk -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: SEDEL.Target.Eval.Thunk)
                   (s :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString# "<Thunk>"# s) -}
778914aa0f61b54778137b67e53061bb
  $fShowValue :: GHC.Show.Show SEDEL.Target.Eval.Value
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ SEDEL.Target.Eval.Value
                  SEDEL.Target.Eval.$fShowValue_$cshowsPrec
                  SEDEL.Target.Eval.$fShowValue_$cshow
                  SEDEL.Target.Eval.$fShowValue_$cshowList -}
778914aa0f61b54778137b67e53061bb
  $fShowValue1 ::
    SEDEL.Target.Eval.Value -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: SEDEL.Target.Eval.Value)
                   (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (SEDEL.Target.Eval.$fShowValue_$cshow x))
                   s) -}
4eeddd385bf0685873da7676f02a38ab
  $fShowValue10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   SEDEL.Target.Eval.$fShowValue11) -}
07e8200ca0e01f70b88ef86bae39b347
  $fShowValue11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("true"#) -}
e8573e041356d887fee6ad630d41ec59
  $fShowValue12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   SEDEL.Target.Eval.$fShowValue13) -}
c47aa393a11d20085fbf7f6b0c58d633
  $fShowValue13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("false"#) -}
f8af942ec1b32a21391a9b2f897a80d7
  $fShowValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   SEDEL.Target.Eval.$fShowValue3) -}
8f641d9181bdeaba253cc48db427907b
  $fShowValue3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<Lambda>"#) -}
7baf4a2366d48bbecee7838045f072c5
  $fShowValue4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   SEDEL.Target.Eval.$fShowValue5) -}
2c867c5dc9c428c735dc9104a28b8bd6
  $fShowValue5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<lambda>"#) -}
7a1f2e5082688dd77c6e1eee0e303ad3
  $fShowValue6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   SEDEL.Target.Eval.$fShowValue7) -}
b9c1a6b9b0dba1e9d4093e78378352ac
  $fShowValue7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("()"#) -}
4864d229bdc49c2435053f86d3608ac2
  $fShowValue8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   SEDEL.Target.Eval.$fShowValue9) -}
9580b95d5acfdd2773182c299c39c553
  $fShowValue9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<Pair>"#) -}
778914aa0f61b54778137b67e53061bb
  $fShowValue_$cshow :: SEDEL.Target.Eval.Value -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: SEDEL.Target.Eval.Value) ->
                 case ds of wild {
                   SEDEL.Target.Eval.VLit dt
                   -> GHC.Float.$w$sshowSignedFloat
                        GHC.Float.$fShowDouble2
                        GHC.Float.minExpt
                        dt
                        (GHC.Types.[] @ GHC.Types.Char)
                   SEDEL.Target.Eval.VBool ds1
                   -> case ds1 of wild1 {
                        GHC.Types.False -> SEDEL.Target.Eval.$fShowValue12
                        GHC.Types.True -> SEDEL.Target.Eval.$fShowValue10 }
                   SEDEL.Target.Eval.VPair ds1 ds2 -> SEDEL.Target.Eval.$fShowValue8
                   SEDEL.Target.Eval.VUnit -> SEDEL.Target.Eval.$fShowValue6
                   SEDEL.Target.Eval.VLam ds1 -> SEDEL.Target.Eval.$fShowValue4
                   SEDEL.Target.Eval.VBLam ds1 -> SEDEL.Target.Eval.$fShowValue2 }) -}
778914aa0f61b54778137b67e53061bb
  $fShowValue_$cshowList ::
    [SEDEL.Target.Eval.Value] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [SEDEL.Target.Eval.Value]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ SEDEL.Target.Eval.Value
                   SEDEL.Target.Eval.$fShowValue1
                   ls
                   s) -}
778914aa0f61b54778137b67e53061bb
  $fShowValue_$cshowsPrec ::
    GHC.Types.Int -> SEDEL.Target.Eval.Value -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: SEDEL.Target.Eval.Value)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (SEDEL.Target.Eval.$fShowValue_$cshow x))
                   s) -}
69491e23b641704c8a5bb876d567346b
  $sinsert_$sgo8 ::
    SEDEL.Target.Syntax.UName
    -> a1
    -> Data.Map.Internal.Map SEDEL.Target.Syntax.UName a1
    -> Data.Map.Internal.Map SEDEL.Target.Syntax.UName a1
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
c19fc2edac03567b8e196dbec6f1e28d
  $slookup1 ::
    SEDEL.Target.Syntax.UName
    -> Data.Map.Internal.Map SEDEL.Target.Syntax.UName a
    -> GHC.Maybe.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
d3f2e2874126cf5ebe85b49774e137bd
  $tc'Thunk :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11456804840624242314##
                   11459232967115639069##
                   SEDEL.Target.Eval.$trModule
                   SEDEL.Target.Eval.$tc'Thunk2
                   0#
                   SEDEL.Target.Eval.$tc'Thunk1) -}
2e0637b0db2767c3f71a54cda009977e
  $tc'Thunk1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
263544a29c375bf8d367e938a00c6172
  $tc'Thunk2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$tc'Thunk3) -}
ca8c3d6d6259271f7c9ade732c7f49d3
  $tc'Thunk3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Thunk"#) -}
8fffffb80c528542d3971528709a1845
  $tc'VBLam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12589272288791559245##
                   15735591726201607167##
                   SEDEL.Target.Eval.$trModule
                   SEDEL.Target.Eval.$tc'VBLam2
                   0#
                   SEDEL.Target.Eval.$tc'VBLam1) -}
a18b347fec9640f4bdbc1256a196538d
  $tc'VBLam1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0542ab5631d2a07f6a7860b7955c8b12
  $tc'VBLam2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$tc'VBLam3) -}
d0ce04ef4a3ca0a4847c73433ad4725c
  $tc'VBLam3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VBLam"#) -}
11d779d050e7ccffcbdb8ea987c27d30
  $tc'VBool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16977078506491038080##
                   10657931943397954321##
                   SEDEL.Target.Eval.$trModule
                   SEDEL.Target.Eval.$tc'VBool2
                   0#
                   SEDEL.Target.Eval.$tc'VBool1) -}
8f857aac7cd47bd6cea069986da0d3e8
  $tc'VBool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0c0649fbc936c1faf363fe17fd31c31a
  $tc'VBool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$tc'VBool3) -}
0312fee9cdde68e81e4b40f202347ec4
  $tc'VBool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VBool"#) -}
abc87979ed3189bba6817e6bb9b6b9ca
  $tc'VLam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4413462644162729021##
                   13644799100348015048##
                   SEDEL.Target.Eval.$trModule
                   SEDEL.Target.Eval.$tc'VLam1
                   0#
                   SEDEL.Target.Eval.$tc'VBLam1) -}
a712ae677c4063f8c2d8ad25f8b37b65
  $tc'VLam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$tc'VLam2) -}
b7a79b029fd522e48686137ed2587ac5
  $tc'VLam2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VLam"#) -}
dd8c9dc12e294ec3f90c7f2e7480a818
  $tc'VLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10880664657156034768##
                   13049145784636503940##
                   SEDEL.Target.Eval.$trModule
                   SEDEL.Target.Eval.$tc'VLit2
                   0#
                   SEDEL.Target.Eval.$tc'VLit1) -}
98d7001eb54c71499ddf8ae60cd7d749
  $tc'VLit1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0ffc6b63cdac2d4c59548f15dbb0ff02
  $tc'VLit2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$tc'VLit3) -}
e66fca8f3d7fb14ce9e34e6eb46d1cdd
  $tc'VLit3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VLit"#) -}
b049872238986fb836775cf2d6c18474
  $tc'VPair :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5940877375861627682##
                   3423239019451736816##
                   SEDEL.Target.Eval.$trModule
                   SEDEL.Target.Eval.$tc'VPair2
                   0#
                   SEDEL.Target.Eval.$tc'VPair1) -}
b278542aa42f64e6b1a84440ca4468bc
  $tc'VPair1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7bc3cc88a8b4aa0fc8d874ad9e6e8425
  $tc'VPair2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$tc'VPair3) -}
fd7c3c76a6dc36f21cfef7963a07ef5b
  $tc'VPair3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VPair"#) -}
edd6214edfdd8fb2139a2bcb2f06f2fa
  $tc'VUnit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5654846504702533265##
                   12464391420776706695##
                   SEDEL.Target.Eval.$trModule
                   SEDEL.Target.Eval.$tc'VUnit2
                   0#
                   SEDEL.Target.Eval.$tc'VUnit1) -}
62f8bd0b33cdfdfc19aaf2ae4b31c161
  $tc'VUnit1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
3d5fbd62e0c9ab77c94be26099b31ea5
  $tc'VUnit2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$tc'VUnit3) -}
9d88a8d2652a12b4ebbbf68a6fc7f8de
  $tc'VUnit3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VUnit"#) -}
9ab046f54ac4f61e18cd1f759cd6a666
  $tcThunk :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10313188857312738269##
                   13057144412607384931##
                   SEDEL.Target.Eval.$trModule
                   SEDEL.Target.Eval.$tcThunk1
                   0#
                   GHC.Types.krep$*) -}
f49f486c1b1449a2e424e51e9ea04643
  $tcThunk1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$tcThunk2) -}
9f9e6aadb556313d8ecae1d307bc8ddb
  $tcThunk2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Thunk"#) -}
17be66aa079f1556d1b2efdf2962692c
  $tcValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2488387139818058679##
                   13763271669339791052##
                   SEDEL.Target.Eval.$trModule
                   SEDEL.Target.Eval.$tcValue1
                   0#
                   GHC.Types.krep$*) -}
2ccc18645cebecc642e59b7608860b92
  $tcValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$tcValue2) -}
88bd5d8ea92c6df4a7c02681886543a2
  $tcValue2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Value"#) -}
d8d7c44acb507d7bf40c432a57b7ff66
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   SEDEL.Target.Eval.$trModule3
                   SEDEL.Target.Eval.$trModule1) -}
765f9a6f761a814903a4ab6bfbb3c251
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$trModule2) -}
2890c6091cfd7c7aab2e5e82af26ff22
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SEDEL.Target.Eval"#) -}
6ac2177c2c72991958e1d3d950cdc28d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Target.Eval.$trModule4) -}
8184747e95998188c5418ca9d1e40b4a
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ"#) -}
ee84c220449c196db092d7333136294f
  type Env =
    Data.Map.Internal.Map
      SEDEL.Target.Syntax.UName SEDEL.Target.Eval.Thunk
92815ce030e1a95d43f4bb09ee15a812
  type EvalM a =
    Unbound.Generics.LocallyNameless.Fresh.FreshMT
      (Control.Monad.Trans.Except.ExceptT GHC.Base.String GHC.Types.IO) a
778914aa0f61b54778137b67e53061bb
  newtype Thunk
    = Thunk {force :: SEDEL.Target.Eval.EvalM SEDEL.Target.Eval.Value}
778914aa0f61b54778137b67e53061bb
  data Value
    = VLit {-# UNPACK #-}GHC.Types.Double
    | VBool !GHC.Types.Bool
    | VPair !SEDEL.Target.Eval.Thunk !SEDEL.Target.Eval.Thunk
    | VUnit
    | VLam !(SEDEL.Target.Eval.Thunk
             -> SEDEL.Target.Eval.EvalM SEDEL.Target.Eval.Value)
    | VBLam !(SEDEL.Target.Eval.Thunk
              -> SEDEL.Target.Eval.EvalM SEDEL.Target.Eval.Value)
a9579eee166e25592ee13bb81d734004
  eval ::
    SEDEL.Target.Eval.Env
    -> SEDEL.Target.Syntax.UExpr
    -> SEDEL.Target.Eval.EvalM SEDEL.Target.Eval.Value
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
28e60a4a02017f266b96adc0ea392378
  evaluate ::
    SEDEL.Target.Syntax.UExpr
    -> GHC.Types.IO
         (Data.Either.Either GHC.Base.String SEDEL.Target.Eval.Value)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                SEDEL.Target.Eval.evaluate1
                  `cast`
                (<SEDEL.Target.Syntax.UExpr>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either
                                  [GHC.Types.Char] SEDEL.Target.Eval.Value>_R)) -}
89721c2fec1e7e84a5bf4a252cd05d21
  evaluate1 ::
    SEDEL.Target.Syntax.UExpr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either [GHC.Types.Char] SEDEL.Target.Eval.Value #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e :: SEDEL.Target.Syntax.UExpr)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ((SEDEL.Target.Eval.eval
                          (Data.Map.Internal.Tip
                             @ SEDEL.Target.Syntax.UName
                             @ SEDEL.Target.Eval.Thunk)
                          e)
                         `cast`
                       (Unbound.Generics.LocallyNameless.Fresh.N:FreshMT[0] <Control.Monad.Trans.Except.ExceptT
                                                                               GHC.Base.String
                                                                               GHC.Types.IO>_N <SEDEL.Target.Eval.Value>_N ; Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                                 <GHC.Integer.Type.Integer>_N
                                                                                                                                 <Control.Monad.Trans.Except.ExceptT
                                                                                                                                    GHC.Base.String
                                                                                                                                    GHC.Types.IO>_R
                                                                                                                                 <SEDEL.Target.Eval.Value>_N)
                         Unbound.Generics.LocallyNameless.Fresh.runFreshM1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <[GHC.Types.Char]>_N
                           <GHC.Types.IO>_R
                           <(SEDEL.Target.Eval.Value,
                             GHC.Integer.Type.Integer)>_N ; GHC.Types.N:IO[0]
                                                                <Data.Either.Either
                                                                   [GHC.Types.Char]
                                                                   (SEDEL.Target.Eval.Value,
                                                                    GHC.Integer.Type.Integer)>_R)
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left e1
                   -> (# ipv,
                         Data.Either.Left @ [GHC.Types.Char] @ SEDEL.Target.Eval.Value e1 #)
                   Data.Either.Right x
                   -> (# ipv,
                         Data.Either.Right
                           @ [GHC.Types.Char]
                           @ SEDEL.Target.Eval.Value
                           (case x of wild1 { (,) a1 ds2 -> a1 }) #) } }) -}
778914aa0f61b54778137b67e53061bb
  force ::
    SEDEL.Target.Eval.Thunk
    -> SEDEL.Target.Eval.EvalM SEDEL.Target.Eval.Value
  RecSel Left SEDEL.Target.Eval.Thunk
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                SEDEL.Target.Eval.force1
                  `cast`
                (<SEDEL.Target.Eval.Thunk>_R ->_R SEDEL.Target.Eval.N:Thunk[0]) -}
778914aa0f61b54778137b67e53061bb
  force1 :: SEDEL.Target.Eval.Thunk -> SEDEL.Target.Eval.Thunk
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: SEDEL.Target.Eval.Thunk) -> ds) -}
instance GHC.Show.Show [SEDEL.Target.Eval.Thunk]
  = SEDEL.Target.Eval.$fShowThunk
instance GHC.Show.Show [SEDEL.Target.Eval.Value]
  = SEDEL.Target.Eval.$fShowValue
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

