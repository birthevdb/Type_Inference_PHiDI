
==================== FINAL INTERFACE ====================
2019-08-12 12:24:34.408923 UTC

interface sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ:SEDEL.Util 8063
  interface hash: f192140ebc32455df952aefd2a1e2244
  ABI hash: c1534bfc592d5431439a65f47bff8b46
  export-list hash: a4b496c924b84e318819b4bae94d6d7e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 77e0b76db453e2958210ce9cd3d853a9
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  SEDEL.Util.eapp
  SEDEL.Util.ebind
  SEDEL.Util.elam
  SEDEL.Util.elet
  SEDEL.Util.eletr
  SEDEL.Util.evar
  SEDEL.Util.evarFi
  SEDEL.Util.getFreshUni
  SEDEL.Util.mkArr
  SEDEL.Util.mkRecds
  SEDEL.Util.mkRecds'
  SEDEL.Util.mkRecdsT
  SEDEL.Util.tforall
  SEDEL.Util.topLike
  SEDEL.Util.tvar
module dependencies: SEDEL.Common SEDEL.Intermediate.Syntax
                     SEDEL.Source.Syntax
package dependencies: array-0.5.3.0 async-2.2.1 base-4.12.0.0
                      base-orphans-0.8 bifunctors-5.5.3 binary-0.8.6.0
                      bytestring-0.10.8.2 comonad-5.0.4 containers-0.6.0.1
                      deepseq-1.4.4.0 distributive-0.6 exceptions-0.10.0
                      ghc-boot-th-8.6.3 ghc-prim-0.5.3 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 megaparsec-7.0.4 mtl-2.2.2
                      parser-combinators-1.0.1 pretty-1.1.3.6 prettyprinter-1.2.1
                      profunctors-5.3 protolude-0.2.3 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 transformers-0.5.5.0
                      unbound-generics-0.4.0
orphans: sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ:SEDEL.Source.Syntax
         sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ:SEDEL.Intermediate.Syntax
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show stm-2.5.0.0:Control.Monad.STM
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type
                         megaparsec-7.0.4:Text.Megaparsec.Error
                         megaparsec-7.0.4:Text.Megaparsec.Pos
                         megaparsec-7.0.4:Text.Megaparsec.State
                         megaparsec-7.0.4:Text.Megaparsec.Stream
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         prettyprinter-1.2.1:Data.Text.Prettyprint.Doc.Internal
                         sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ:SEDEL.Common
                         sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ:SEDEL.Intermediate.Syntax
                         sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ:SEDEL.Source.Syntax
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Bind
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Embed
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Ignore
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Name
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Rebind
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Rec
                         unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Shift
import  -/  base-4.12.0.0:Data.Foldable 00188ddf89c975fee76bdfad479443c1
import  -/  base-4.12.0.0:Data.List ce2c69da408fdc014383cede9e1f9adf
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.List 734a72beb76d276fb4a0ba2689a5711f
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  ghc-prim-0.5.3:GHC.Classes e0d9c979f6368701f34fa421754d2cce
import  -/  SEDEL.Intermediate.Syntax f958fad6e88fb88eb220133854cd0fcf
  exports: 205c54e0e633701a9c7db27d9e71b968
  FExpr bfd7da9f3e523c5cb9c209b4524af79c
  FType bfd7da9f3e523c5cb9c209b4524af79c
  Letrec 19373a9fddf613155330e1de49c97a1d
  Var 731cc8c46e98b27624ba7cb24de70db3
import  -/  SEDEL.Source.Syntax ec83a0da1c10765115fe4a9f09c754b0
  exports: 9689242b0decab272007a11f45b72d7d
  And 0283b9e7440c4a3e47a1281e02970dde
  App c363422f50778c82e96747329eb9877e
  Arr df83e91aec2f80dc9d042375099bb771
  DForall 0b90eb4f4665e714927dfbf10c3a2bda
  DRec' 7cbb27fc4ed6a9f26ea9ac20bbfb9298
  Expr 350069ed8c9e308e7d171878eb06250d
  Label e739a3e6552cb99dfb25d8219b847fb6
  Lam 63512428e48d94b955997c9b670e149e
  Let 01c008f6cf31bc0acec7ee6debf6c39a
  Merge 8618c4cff7c45435653614618dd77223
  Rec f54127b91625470e365ba58cc88fab42
  SRecT 4b07dd6d7293a4e5e53901cef6634094
  SType 350069ed8c9e308e7d171878eb06250d
  Scheme 350069ed8c9e308e7d171878eb06250d
  TUni 350069ed8c9e308e7d171878eb06250d
  TVar 2d4c55a015b709b4614fff76215f0c95
  TmBind 350069ed8c9e308e7d171878eb06250d
  TmName 350069ed8c9e308e7d171878eb06250d
  Top 98e3b66dfbd16b59d9fe44f403ad750d
  TopT fa9c823349a4c24a48445d1081f1a548
  Var 631e2156171f241947a37d09f9c20f3b
import  -/  unbound-generics-0.4.0:Unbound.Generics.LocallyNameless 36704d4dbfb3fb22f46cde363ae796f2
import  -/  unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Bind 3c4064682c8bdf96e868ab5666aaa835
import  -/  unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Fresh e0f8d49fe8e0f78dfcabb34436892778
import  -/  unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Name 81d6e7baa0bd0880e550478df477614a
import  -/  unbound-generics-0.4.0:Unbound.Generics.LocallyNameless.Operations d0c219408974b95413509bf76023577c
aa6094ba2170a21c1d512f1e402dc729
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   SEDEL.Util.$trModule3
                   SEDEL.Util.$trModule1) -}
b7e76fd124ec839b6cddadb277663004
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Util.$trModule2) -}
5fe338edf5495d319d3c5f162e4fc534
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SEDEL.Util"#) -}
e69745664d2525d0fae98cfa7b765dfe
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SEDEL.Util.$trModule4) -}
cefd8bc4149f2722ba95cd8fc83eb73e
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("sedel-0.1.0.0-CGdrjkISkKsB7AvhzRMuoJ"#) -}
f5f744343e6af88482436916fafd6e1d
  $welet ::
    GHC.Base.String
    -> SEDEL.Source.Syntax.Expr
    -> SEDEL.Source.Syntax.Expr
    -> (# Unbound.Generics.LocallyNameless.Bind.Bind
            SEDEL.Source.Syntax.TmName
            (SEDEL.Source.Syntax.Expr, SEDEL.Source.Syntax.Expr) #)
  {- Arity: 3, Strictness: <L,U><L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: GHC.Base.String)
                   (w1 :: SEDEL.Source.Syntax.Expr)
                   (w2 :: SEDEL.Source.Syntax.Expr) ->
                 (# let {
                      p1 :: Unbound.Generics.LocallyNameless.Name.Name
                              SEDEL.Source.Syntax.Expr
                      = Unbound.Generics.LocallyNameless.Name.Fn
                          @ SEDEL.Source.Syntax.Expr
                          w
                          Unbound.Generics.LocallyNameless.Name.$fShowAnyName3
                    } in
                    Unbound.Generics.LocallyNameless.Bind.B
                      @ (Unbound.Generics.LocallyNameless.Name.Name
                           SEDEL.Source.Syntax.Expr)
                      @ (SEDEL.Source.Syntax.Expr, SEDEL.Source.Syntax.Expr)
                      p1
                      (let {
                         b1 :: Unbound.Generics.LocallyNameless.Name.AnyName
                               -> Data.Either.Either
                                    GHC.Integer.Type.Integer GHC.Integer.Type.Integer
                           {- Arity: 1 -}
                         = Unbound.Generics.LocallyNameless.Alpha.$fAlphaName4
                             @ SEDEL.Source.Syntax.Expr
                             SEDEL.Source.Syntax.$fAlphaExpr1
                               `cast`
                             (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <SEDEL.Source.Syntax.Expr>_N)
                             p1
                       } in
                       (SEDEL.Source.Syntax.$fAlphaExpr_$cclose
                          Unbound.Generics.LocallyNameless.Alpha.initialCtx
                          b1
                            `cast`
                          (Sym (Unbound.Generics.LocallyNameless.Alpha.N:NamePatFind[0]))
                          w1,
                        SEDEL.Source.Syntax.$fAlphaExpr_$cclose
                          Unbound.Generics.LocallyNameless.Alpha.initialCtx
                          b1
                            `cast`
                          (Sym (Unbound.Generics.LocallyNameless.Alpha.N:NamePatFind[0]))
                          w2)) #)) -}
643b6e60e6fab66c9b6a2d4fad24404a
  $weletr ::
    GHC.Base.String
    -> SEDEL.Intermediate.Syntax.FType
    -> SEDEL.Intermediate.Syntax.FExpr
    -> SEDEL.Intermediate.Syntax.FExpr
    -> (# Unbound.Generics.LocallyNameless.Bind.Bind
            (SEDEL.Intermediate.Syntax.TmName,
             Unbound.Generics.LocallyNameless.Embed.Embed
               (GHC.Maybe.Maybe SEDEL.Intermediate.Syntax.FType))
            (SEDEL.Intermediate.Syntax.FExpr,
             SEDEL.Intermediate.Syntax.FExpr) #)
  {- Arity: 4, Strictness: <L,U><L,U><L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: GHC.Base.String)
                   (w1 :: SEDEL.Intermediate.Syntax.FType)
                   (w2 :: SEDEL.Intermediate.Syntax.FExpr)
                   (w3 :: SEDEL.Intermediate.Syntax.FExpr) ->
                 (# let {
                      p1 :: Unbound.Generics.LocallyNameless.Name.Name
                              SEDEL.Intermediate.Syntax.FExpr
                      = Unbound.Generics.LocallyNameless.Name.Fn
                          @ SEDEL.Intermediate.Syntax.FExpr
                          w
                          Unbound.Generics.LocallyNameless.Name.$fShowAnyName3
                    } in
                    Unbound.Generics.LocallyNameless.Bind.B
                      @ (Unbound.Generics.LocallyNameless.Name.Name
                           SEDEL.Intermediate.Syntax.FExpr,
                         Unbound.Generics.LocallyNameless.Embed.Embed
                           (GHC.Maybe.Maybe SEDEL.Intermediate.Syntax.FType))
                      @ (SEDEL.Intermediate.Syntax.FExpr,
                         SEDEL.Intermediate.Syntax.FExpr)
                      (p1,
                       (GHC.Maybe.Just @ SEDEL.Intermediate.Syntax.FType w1)
                         `cast`
                       (Sym (Data.Functor.Identity.N:Identity[0]
                                 (Nth:1
                                      (Nth:2
                                           (Nth:3
                                                (Nth:3
                                                     (<Data.Profunctor.Unsafe.Profunctor
                                                         (Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                            (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                               (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                  (GHC.Maybe.Maybe
                                                                     SEDEL.Intermediate.Syntax.FType)))
                                                            (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                               (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                  (GHC.Maybe.Maybe
                                                                     SEDEL.Intermediate.Syntax.FType))))>_R
                                                      ->_R <GHC.Base.Functor
                                                              Data.Functor.Identity.Identity>_R
                                                      ->_R (Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                              <Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                 (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                    (GHC.Maybe.Maybe
                                                                       SEDEL.Intermediate.Syntax.FType))>_R
                                                              <Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                 (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                    (GHC.Maybe.Maybe
                                                                       SEDEL.Intermediate.Syntax.FType))>_R
                                                              (Sub (Unbound.Generics.LocallyNameless.Embed.D:R:EmbeddedEmbed[0]
                                                                        <GHC.Maybe.Maybe
                                                                           SEDEL.Intermediate.Syntax.FType>_N))
                                                              (Data.Functor.Identity.Identity
                                                                 (Sub (Unbound.Generics.LocallyNameless.Embed.D:R:EmbeddedEmbed[0]
                                                                           <GHC.Maybe.Maybe
                                                                              SEDEL.Intermediate.Syntax.FType>_N)))_R)_R
                                                      ->_R <Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                              (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                 (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                    (GHC.Maybe.Maybe
                                                                       SEDEL.Intermediate.Syntax.FType)))
                                                              (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                 (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                    (GHC.Maybe.Maybe
                                                                       SEDEL.Intermediate.Syntax.FType)))
                                                              (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                 (GHC.Maybe.Maybe
                                                                    SEDEL.Intermediate.Syntax.FType))
                                                              (Data.Functor.Identity.Identity
                                                                 (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                    (GHC.Maybe.Maybe
                                                                       SEDEL.Intermediate.Syntax.FType)))>_R)))) ; Sub (Unbound.Generics.LocallyNameless.Embed.D:R:EmbeddedEmbed[0]
                                                                                                                            <GHC.Maybe.Maybe
                                                                                                                               SEDEL.Intermediate.Syntax.FType>_N))) ; (Nth:3
                                                                                                                                                                            (Nth:2
                                                                                                                                                                                 (Nth:3
                                                                                                                                                                                      (Nth:3
                                                                                                                                                                                           (<Data.Profunctor.Unsafe.Profunctor
                                                                                                                                                                                               (Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                                                                                                                                                                  (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                                     (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                                        (GHC.Maybe.Maybe
                                                                                                                                                                                                           SEDEL.Intermediate.Syntax.FType)))
                                                                                                                                                                                                  (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                                     (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                                        (GHC.Maybe.Maybe
                                                                                                                                                                                                           SEDEL.Intermediate.Syntax.FType))))>_R
                                                                                                                                                                                            ->_R <GHC.Base.Functor
                                                                                                                                                                                                    Data.Functor.Identity.Identity>_R
                                                                                                                                                                                            ->_R (Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                                                                                                                                                                    <Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                                       (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                                          (GHC.Maybe.Maybe
                                                                                                                                                                                                             SEDEL.Intermediate.Syntax.FType))>_R
                                                                                                                                                                                                    <Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                                       (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                                          (GHC.Maybe.Maybe
                                                                                                                                                                                                             SEDEL.Intermediate.Syntax.FType))>_R
                                                                                                                                                                                                    (Sub (Unbound.Generics.LocallyNameless.Embed.D:R:EmbeddedEmbed[0]
                                                                                                                                                                                                              <GHC.Maybe.Maybe
                                                                                                                                                                                                                 SEDEL.Intermediate.Syntax.FType>_N))
                                                                                                                                                                                                    (Data.Functor.Identity.Identity
                                                                                                                                                                                                       (Sub (Unbound.Generics.LocallyNameless.Embed.D:R:EmbeddedEmbed[0]
                                                                                                                                                                                                                 <GHC.Maybe.Maybe
                                                                                                                                                                                                                    SEDEL.Intermediate.Syntax.FType>_N)))_R)_R
                                                                                                                                                                                            ->_R <Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                                                                                                                                                                    (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                                       (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                                          (GHC.Maybe.Maybe
                                                                                                                                                                                                             SEDEL.Intermediate.Syntax.FType)))
                                                                                                                                                                                                    (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                                       (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                                          (GHC.Maybe.Maybe
                                                                                                                                                                                                             SEDEL.Intermediate.Syntax.FType)))
                                                                                                                                                                                                    (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                                       (GHC.Maybe.Maybe
                                                                                                                                                                                                          SEDEL.Intermediate.Syntax.FType))
                                                                                                                                                                                                    (Data.Functor.Identity.Identity
                                                                                                                                                                                                       (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                                          (GHC.Maybe.Maybe
                                                                                                                                                                                                             SEDEL.Intermediate.Syntax.FType)))>_R)))) ; Data.Functor.Identity.N:Identity[0]
                                                                                                                                                                                                                                                             (Sym (Unbound.Generics.LocallyNameless.Embed.N:Embed[0]
                                                                                                                                                                                                                                                                       <GHC.Maybe.Maybe
                                                                                                                                                                                                                                                                          SEDEL.Intermediate.Syntax.FType>_R)))))
                      (let {
                         b1 :: Unbound.Generics.LocallyNameless.Name.AnyName
                               -> Data.Either.Either
                                    GHC.Integer.Type.Integer GHC.Integer.Type.Integer
                           {- Arity: 1, Strictness: <S,1*U> -}
                         = \ (nm :: Unbound.Generics.LocallyNameless.Name.AnyName) ->
                           case Unbound.Generics.LocallyNameless.Alpha.$fAlphaName4
                                  @ SEDEL.Intermediate.Syntax.FExpr
                                  SEDEL.Intermediate.Syntax.$fAlphaFExpr19
                                    `cast`
                                  (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <SEDEL.Intermediate.Syntax.FExpr>_N)
                                  p1
                                  nm of wild {
                             Data.Either.Left n
                             -> case GHC.Integer.Type.plusInteger
                                       n
                                       Unbound.Generics.LocallyNameless.Alpha.$fAlpha()4 of vx { DEFAULT ->
                                Data.Either.Left
                                  @ GHC.Integer.Type.Integer
                                  @ GHC.Integer.Type.Integer
                                  vx }
                             Data.Either.Right ds2 -> wild }
                       } in
                       (SEDEL.Intermediate.Syntax.$fAlphaFExpr_$cclose
                          Unbound.Generics.LocallyNameless.Alpha.initialCtx
                          b1
                            `cast`
                          (Sym (Unbound.Generics.LocallyNameless.Alpha.N:NamePatFind[0]))
                          w2,
                        SEDEL.Intermediate.Syntax.$fAlphaFExpr_$cclose
                          Unbound.Generics.LocallyNameless.Alpha.initialCtx
                          b1
                            `cast`
                          (Sym (Unbound.Generics.LocallyNameless.Alpha.N:NamePatFind[0]))
                          w3)) #)) -}
f11911ea3fa184f39d8e42a000808d93
  $wtforall ::
    GHC.Base.String
    -> SEDEL.Source.Syntax.SType
    -> SEDEL.Source.Syntax.Scheme
    -> (# Unbound.Generics.LocallyNameless.Bind.Bind
            (SEDEL.Source.Syntax.TyName,
             Unbound.Generics.LocallyNameless.Embed.Embed
               SEDEL.Source.Syntax.SType)
            SEDEL.Source.Syntax.Scheme #)
  {- Arity: 3, Strictness: <L,U><L,U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: SEDEL.Source.Syntax.SType)
                   (w :: SEDEL.Source.Syntax.Scheme) ->
                 (# let {
                      p1 :: Unbound.Generics.LocallyNameless.Name.Name
                              SEDEL.Source.Syntax.SType
                      = Unbound.Generics.LocallyNameless.Name.Fn
                          @ SEDEL.Source.Syntax.SType
                          ww
                          Unbound.Generics.LocallyNameless.Name.$fShowAnyName3
                    } in
                    Unbound.Generics.LocallyNameless.Bind.B
                      @ (Unbound.Generics.LocallyNameless.Name.Name
                           SEDEL.Source.Syntax.SType,
                         Unbound.Generics.LocallyNameless.Embed.Embed
                           SEDEL.Source.Syntax.SType)
                      @ SEDEL.Source.Syntax.Scheme
                      (p1,
                       ww1
                         `cast`
                       (Sym (Data.Functor.Identity.N:Identity[0]
                                 (Nth:1
                                      (Nth:2
                                           (Nth:3
                                                (Nth:3
                                                     (<Data.Profunctor.Unsafe.Profunctor
                                                         (Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                            (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                               (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                  SEDEL.Source.Syntax.SType))
                                                            (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                               (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                  SEDEL.Source.Syntax.SType)))>_R
                                                      ->_R <GHC.Base.Functor
                                                              Data.Functor.Identity.Identity>_R
                                                      ->_R (Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                              <Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                 (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                    SEDEL.Source.Syntax.SType)>_R
                                                              <Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                 (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                    SEDEL.Source.Syntax.SType)>_R
                                                              (Sub (Unbound.Generics.LocallyNameless.Embed.D:R:EmbeddedEmbed[0]
                                                                        <SEDEL.Source.Syntax.SType>_N))
                                                              (Data.Functor.Identity.Identity
                                                                 (Sub (Unbound.Generics.LocallyNameless.Embed.D:R:EmbeddedEmbed[0]
                                                                           <SEDEL.Source.Syntax.SType>_N)))_R)_R
                                                      ->_R <Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                              (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                 (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                    SEDEL.Source.Syntax.SType))
                                                              (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                 (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                    SEDEL.Source.Syntax.SType))
                                                              (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                 SEDEL.Source.Syntax.SType)
                                                              (Data.Functor.Identity.Identity
                                                                 (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                    SEDEL.Source.Syntax.SType))>_R)))) ; Sub (Unbound.Generics.LocallyNameless.Embed.D:R:EmbeddedEmbed[0]
                                                                                                                  <SEDEL.Source.Syntax.SType>_N))) ; (Nth:3
                                                                                                                                                          (Nth:2
                                                                                                                                                               (Nth:3
                                                                                                                                                                    (Nth:3
                                                                                                                                                                         (<Data.Profunctor.Unsafe.Profunctor
                                                                                                                                                                             (Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                                                                                                                                                (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                   (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                      SEDEL.Source.Syntax.SType))
                                                                                                                                                                                (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                   (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                      SEDEL.Source.Syntax.SType)))>_R
                                                                                                                                                                          ->_R <GHC.Base.Functor
                                                                                                                                                                                  Data.Functor.Identity.Identity>_R
                                                                                                                                                                          ->_R (Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                                                                                                                                                  <Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                     (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                        SEDEL.Source.Syntax.SType)>_R
                                                                                                                                                                                  <Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                     (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                        SEDEL.Source.Syntax.SType)>_R
                                                                                                                                                                                  (Sub (Unbound.Generics.LocallyNameless.Embed.D:R:EmbeddedEmbed[0]
                                                                                                                                                                                            <SEDEL.Source.Syntax.SType>_N))
                                                                                                                                                                                  (Data.Functor.Identity.Identity
                                                                                                                                                                                     (Sub (Unbound.Generics.LocallyNameless.Embed.D:R:EmbeddedEmbed[0]
                                                                                                                                                                                               <SEDEL.Source.Syntax.SType>_N)))_R)_R
                                                                                                                                                                          ->_R <Unbound.Generics.LocallyNameless.Internal.Iso.Exchange
                                                                                                                                                                                  (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                     (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                        SEDEL.Source.Syntax.SType))
                                                                                                                                                                                  (Unbound.Generics.LocallyNameless.Embed.Embedded
                                                                                                                                                                                     (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                        SEDEL.Source.Syntax.SType))
                                                                                                                                                                                  (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                     SEDEL.Source.Syntax.SType)
                                                                                                                                                                                  (Data.Functor.Identity.Identity
                                                                                                                                                                                     (Unbound.Generics.LocallyNameless.Embed.Embed
                                                                                                                                                                                        SEDEL.Source.Syntax.SType))>_R)))) ; Data.Functor.Identity.N:Identity[0]
                                                                                                                                                                                                                                 (Sym (Unbound.Generics.LocallyNameless.Embed.N:Embed[0]
                                                                                                                                                                                                                                           <SEDEL.Source.Syntax.SType>_R)))))
                      (SEDEL.Source.Syntax.$fAlphaScheme_$cclose
                         Unbound.Generics.LocallyNameless.Alpha.initialCtx
                         (\ (nm :: Unbound.Generics.LocallyNameless.Name.AnyName) ->
                          case Unbound.Generics.LocallyNameless.Alpha.$fAlphaName4
                                 @ SEDEL.Source.Syntax.SType
                                 SEDEL.Source.Syntax.$fAlphaScheme14
                                   `cast`
                                 (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <SEDEL.Source.Syntax.SType>_N)
                                 p1
                                 nm of wild {
                            Data.Either.Left n
                            -> case GHC.Integer.Type.plusInteger
                                      n
                                      Unbound.Generics.LocallyNameless.Alpha.$fAlpha()4 of vx { DEFAULT ->
                               Data.Either.Left
                                 @ GHC.Integer.Type.Integer
                                 @ GHC.Integer.Type.Integer
                                 vx }
                            Data.Either.Right ds2 -> wild })
                           `cast`
                         (Sym (Unbound.Generics.LocallyNameless.Alpha.N:NamePatFind[0]))
                         w) #)) -}
dedd45cad7c1442738a6789c6bb53362
  eapp ::
    SEDEL.Source.Syntax.Expr
    -> SEDEL.Source.Syntax.Expr -> SEDEL.Source.Syntax.Expr
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (0, True, True) SEDEL.Source.Syntax.App -}
38bb027529a629f5527c729447bb7c03
  ebind ::
    GHC.Base.String
    -> SEDEL.Source.Syntax.Expr
    -> Unbound.Generics.LocallyNameless.Bind.Bind
         SEDEL.Source.Syntax.TmName SEDEL.Source.Syntax.Expr
  {- Arity: 2, Strictness: <L,U><L,1*U>m, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Base.String) (w1 :: SEDEL.Source.Syntax.Expr) ->
                 let {
                   p1 :: Unbound.Generics.LocallyNameless.Name.Name
                           SEDEL.Source.Syntax.Expr
                   = Unbound.Generics.LocallyNameless.Name.Fn
                       @ SEDEL.Source.Syntax.Expr
                       w
                       Unbound.Generics.LocallyNameless.Name.$fShowAnyName3
                 } in
                 Unbound.Generics.LocallyNameless.Bind.B
                   @ SEDEL.Source.Syntax.TmName
                   @ SEDEL.Source.Syntax.Expr
                   p1
                   (SEDEL.Source.Syntax.$fAlphaExpr_$cclose
                      Unbound.Generics.LocallyNameless.Alpha.initialCtx
                      (Unbound.Generics.LocallyNameless.Alpha.$fAlphaName4
                         @ SEDEL.Source.Syntax.Expr
                         SEDEL.Source.Syntax.$fAlphaExpr1
                           `cast`
                         (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <SEDEL.Source.Syntax.Expr>_N)
                         p1)
                        `cast`
                      (Sym (Unbound.Generics.LocallyNameless.Alpha.N:NamePatFind[0]))
                      w1)) -}
7734d63f56abb72b44df14cc1ddc2275
  elam ::
    GHC.Base.String
    -> SEDEL.Source.Syntax.Expr -> SEDEL.Source.Syntax.Expr
  {- Arity: 2, Strictness: <L,U><L,1*U>m3,
     Unfolding: InlineRule (2, True, False)
                (\ (b :: GHC.Base.String) (e :: SEDEL.Source.Syntax.Expr) ->
                 SEDEL.Source.Syntax.Lam (SEDEL.Util.ebind b e)) -}
339fb1ed0fdebd5716b459b2b46b9975
  elet ::
    GHC.Base.String
    -> SEDEL.Source.Syntax.Expr
    -> SEDEL.Source.Syntax.Expr
    -> SEDEL.Source.Syntax.Expr
  {- Arity: 3, Strictness: <L,U><L,1*U><L,1*U>m4, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Base.String)
                   (w1 :: SEDEL.Source.Syntax.Expr)
                   (w2 :: SEDEL.Source.Syntax.Expr) ->
                 case SEDEL.Util.$welet w w1 w2 of ww { Unit# ww1 ->
                 SEDEL.Source.Syntax.Let ww1 }) -}
7d782ef205dd0361b415b0974f68bf33
  eletr ::
    GHC.Base.String
    -> SEDEL.Intermediate.Syntax.FType
    -> SEDEL.Intermediate.Syntax.FExpr
    -> SEDEL.Intermediate.Syntax.FExpr
    -> SEDEL.Intermediate.Syntax.FExpr
  {- Arity: 4, Strictness: <L,U><L,U><L,1*U><L,1*U>m5, Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: GHC.Base.String)
                   (w1 :: SEDEL.Intermediate.Syntax.FType)
                   (w2 :: SEDEL.Intermediate.Syntax.FExpr)
                   (w3 :: SEDEL.Intermediate.Syntax.FExpr) ->
                 case SEDEL.Util.$weletr w w1 w2 w3 of ww { Unit# ww1 ->
                 SEDEL.Intermediate.Syntax.Letrec ww1 }) -}
b2ddeb8e728a2aa666df72cfddc63f44
  evar :: GHC.Base.String -> SEDEL.Source.Syntax.Expr
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 SEDEL.Source.Syntax.Var
                   (Unbound.Generics.LocallyNameless.Name.string2Name
                      @ SEDEL.Source.Syntax.Expr
                      x)) -}
67446edc2e795b212f1581583b2e4709
  evarFi :: GHC.Base.String -> SEDEL.Intermediate.Syntax.FExpr
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 SEDEL.Intermediate.Syntax.Var
                   (Unbound.Generics.LocallyNameless.Name.string2Name
                      @ SEDEL.Intermediate.Syntax.FExpr
                      x)) -}
fa636c9987c2e4947d117749c9f9e8d0
  getFreshUni ::
    Unbound.Generics.LocallyNameless.Fresh.Fresh m =>
    m SEDEL.Source.Syntax.TUni
  {- Arity: 1, Strictness: <S(LC(S)),1*U(A,1*C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ m :: * -> *
                   ($dFresh :: Unbound.Generics.LocallyNameless.Fresh.Fresh m) ->
                 Unbound.Generics.LocallyNameless.Fresh.fresh
                   @ m
                   $dFresh
                   @ SEDEL.Source.Syntax.PType
                   SEDEL.Util.getFreshUni1) -}
75d78f82fea605dfb0a4c3a3ddbd86e8
  getFreshUni1 ::
    Unbound.Generics.LocallyNameless.Name.Name
      SEDEL.Source.Syntax.PType
  {- Strictness: m1,
     Unfolding: (Unbound.Generics.LocallyNameless.Name.Fn
                   @ SEDEL.Source.Syntax.PType
                   SEDEL.Util.getFreshUni3
                   SEDEL.Util.getFreshUni2) -}
66f57667e377698c1e0531893727075b
  getFreshUni2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
7dda4bc4952759dc18edeed6aaf55f79
  getFreshUni3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   SEDEL.Util.getFreshUni4) -}
b0a73582a1fa817838e83435b3130d6f
  getFreshUni4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("u"#) -}
da464b68c31982bef54a16b71b49d73e
  mkArr ::
    SEDEL.Source.Syntax.SType
    -> [SEDEL.Source.Syntax.SType] -> SEDEL.Source.Syntax.SType
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (GHC.Base.foldr
                   @ SEDEL.Source.Syntax.SType
                   @ SEDEL.Source.Syntax.SType
                   SEDEL.Source.Syntax.Arr) -}
4cbb975065776179e6219a8599018ed2
  mkRecds ::
    [(SEDEL.Source.Syntax.Label, SEDEL.Source.Syntax.Expr)]
    -> SEDEL.Source.Syntax.Expr
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [(SEDEL.Source.Syntax.Label,
                            SEDEL.Source.Syntax.Expr)]) ->
                 case ds of wild {
                   [] -> SEDEL.Source.Syntax.Top
                   : ds1 r
                   -> case ds1 of wild1 { (,) l e ->
                      SEDEL.Util.mkRecds_go r (SEDEL.Source.Syntax.Rec l e) } }) -}
49ad7ae5616fce3262548cd8f93b782a
  mkRecds' ::
    [SEDEL.Source.Syntax.TmBind] -> SEDEL.Source.Syntax.Expr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [SEDEL.Source.Syntax.TmBind]) ->
                 case GHC.Base.map
                        @ SEDEL.Source.Syntax.TmBind
                        @ SEDEL.Source.Syntax.Expr
                        SEDEL.Source.Syntax.DRec'
                        x of wild {
                   [] -> GHC.List.foldl1'1 @ SEDEL.Source.Syntax.Expr
                   : x1 xs -> SEDEL.Util.mkRecds'_go xs x1 }) -}
a5738a90eebf87c445d7894338096182
  mkRecds'_go ::
    [SEDEL.Source.Syntax.Expr]
    -> SEDEL.Source.Syntax.Expr -> SEDEL.Source.Syntax.Expr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
b15b65aa321edd4181439becbbb77336
  mkRecdsT ::
    [(SEDEL.Source.Syntax.Label, SEDEL.Source.Syntax.SType)]
    -> SEDEL.Source.Syntax.SType
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [(SEDEL.Source.Syntax.Label,
                            SEDEL.Source.Syntax.SType)]) ->
                 case ds of wild {
                   [] -> SEDEL.Source.Syntax.TopT
                   : ds1 r
                   -> case ds1 of wild1 { (,) l e ->
                      SEDEL.Util.mkRecdsT_go r (SEDEL.Source.Syntax.SRecT l e) } }) -}
49164a21563bf40adeb8561d58d265ad
  mkRecdsT_go ::
    [(SEDEL.Source.Syntax.Label, SEDEL.Source.Syntax.SType)]
    -> SEDEL.Source.Syntax.SType -> SEDEL.Source.Syntax.SType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U> -}
f1bb7b7de005e2452bfb64bf4516f238
  mkRecds_go ::
    [(SEDEL.Source.Syntax.Label, SEDEL.Source.Syntax.Expr)]
    -> SEDEL.Source.Syntax.Expr -> SEDEL.Source.Syntax.Expr
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
c8063ee542e104cfc60908c38e432437
  tforall ::
    (GHC.Base.String, SEDEL.Source.Syntax.SType)
    -> SEDEL.Source.Syntax.Scheme -> SEDEL.Source.Syntax.Scheme
  {- Arity: 2, Strictness: <S,1*U(U,U)><L,1*U>m2, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (GHC.Base.String, SEDEL.Source.Syntax.SType))
                   (w1 :: SEDEL.Source.Syntax.Scheme) ->
                 case w of ww { (,) ww1 ww2 ->
                 case SEDEL.Util.$wtforall ww1 ww2 w1 of ww3 { Unit# ww4 ->
                 SEDEL.Source.Syntax.DForall ww4 } }) -}
c999a92eaaa2d88a1cc774ffc43b62c5
  topLike :: SEDEL.Source.Syntax.SType -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
2dbd4aa2b55add103905987d5c3da293
  tvar :: GHC.Base.String -> SEDEL.Source.Syntax.SType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m5,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 SEDEL.Source.Syntax.TVar
                   (Unbound.Generics.LocallyNameless.Name.string2Name
                      @ SEDEL.Source.Syntax.SType
                      x)) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

