
==================== FINAL INTERFACE ====================
2019-01-06 15:41:18.076768 UTC

interface main:Main 8044
  interface hash: 8ec6e1a815b22fe5314123ff46668000
  ABI hash: 6c94f25fc26ce812b9ed473e353e3753
  export-list hash: a3865c3e1aad579890a1562e4c8578d5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5a09d7971ef0f301973eb33ba13a673a
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.11.3
                      StateVar-1.1.1.1 ansi-terminal-0.8.2 ansi-wl-pprint-0.6.8.2
                      array-0.5.2.0 async-2.2.1 base-4.11.1.0 base-orphans-0.7
                      bifunctors-5.5.3 binary-0.8.5.1 bytestring-0.10.8.2
                      call-stack-0.1.0 case-insensitive-1.2.0.11 clock-0.7.2 colour-2.3.4
                      comonad-5.0.4 containers-0.5.11.0 contravariant-1.4.1
                      deepseq-1.4.3.0 directory-1.3.1.5 distributive-0.5.3
                      exceptions-0.10.0 filepath-1.4.2 ghc-boot-th-8.4.4 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 hspec-2.5.5 hspec-core-2.5.5
                      hspec-expectations-0.8.2 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 logict-0.6.0.2 megaparsec-6.5.0
                      mtl-2.2.2 optparse-applicative-0.14.3.0 parser-combinators-1.0.0
                      pretty-1.1.3.6 prettyprinter-1.2.1 primitive-0.6.3.0
                      process-1.6.3.0 profunctors-5.2.2 protolude-0.2.2
                      quickcheck-io-0.2.0 random-1.1 scientific-0.3.6.2 sedel-0.1.0.0
                      setenv-0.1.1.3 smallcheck-1.1.5 stm-2.4.5.1 tagged-0.8.5
                      tasty-1.1.0.4 tasty-hspec-1.1.5 tasty-quickcheck-0.10
                      tasty-smallcheck-0.8.1 template-haskell-2.13.0.0 text-1.2.3.1
                      tf-random-0.5 time-1.8.0.2 transformers-0.5.5.0
                      unbound-generics-0.3.4 unbounded-delays-0.1.1.0 unix-2.7.2.2
                      wcwidth-0.0.2
orphans: tasty-smallcheck-0.8.1:Test.Tasty.SmallCheck
         smallcheck-1.1.5:Test.SmallCheck.Series colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         sedel-0.1.0.0:SEDEL.PrettyPrint sedel-0.1.0.0:SEDEL.Source.Syntax
         transformers-0.5.5.0:Control.Monad.Trans.Error
         stm-2.4.5.1:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen clock-0.7.2:System.Clock
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         ghc-boot-th-8.4.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.4:GHC.LanguageExtensions.Type
                         hspec-core-2.5.5:Test.Hspec.Core.Example
                         megaparsec-6.5.0:Text.Megaparsec.Error
                         megaparsec-6.5.0:Text.Megaparsec.Pos
                         megaparsec-6.5.0:Text.Megaparsec.State
                         megaparsec-6.5.0:Text.Megaparsec.Stream
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         prettyprinter-1.2.1:Data.Text.Prettyprint.Doc.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         sedel-0.1.0.0:SEDEL.Common sedel-0.1.0.0:SEDEL.Source.Syntax
                         sedel-0.1.0.0:SEDEL.Target.Syntax tagged-0.8.5:Data.Tagged
                         tasty-1.1.0.4:Test.Tasty.Core
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unbound-generics-0.3.4:Unbound.Generics.LocallyNameless.Bind
                         unbound-generics-0.3.4:Unbound.Generics.LocallyNameless.Embed
                         unbound-generics-0.3.4:Unbound.Generics.LocallyNameless.Name
                         unbound-generics-0.3.4:Unbound.Generics.LocallyNameless.Rebind
                         unbound-generics-0.3.4:Unbound.Generics.LocallyNameless.Rec
                         unbound-generics-0.3.4:Unbound.Generics.LocallyNameless.Shift
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  directory-1.3.1.5:System.Directory b48f2bf02a6acabeb39c396bf3b1d6d3
import  -/  directory-1.3.1.5:System.Directory.Internal.Common 88eeec2dd4e3d7d63bc24c2d657e6981
import  -/  filepath-1.4.2:System.FilePath a538d436328dd004b88f7d29a8b244c0
import  -/  filepath-1.4.2:System.FilePath.Posix b68bd59480eb19c1c35857258bda78b4
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec 8e31d148ff4ab552c0e2b68d5794d40c
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec.Monad 5725a760a6996bdce4eefc7741b507bb
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 713f0c8581412c4b3ae306dbada3ec4b
import  -/  sedel-0.1.0.0:SEDEL ae8540d395a566d93ce5eafc1d26dbce
import  -/  sedel-0.1.0.0:SEDEL.PrettyPrint 04afb2ace10474c84b6cd648c0d199ec
import  -/  tasty-1.1.0.4:Test.Tasty d0e1ef40bb7c5487de6dd474d3a8fcad
import  -/  tasty-1.1.0.4:Test.Tasty.Core b67e2836b084812a5f9a9a47dff3020f
import  -/  tasty-hspec-1.1.5:Test.Tasty.Hspec ef85a7ff6edafde7c44f18bac74844b3
8451b292cb97c0d0120457fc38305c36
  $fEqTestResult :: GHC.Classes.Eq Main.TestResult
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.TestResult
                  Main.$fEqTestResult_$c==
                  Main.$fEqTestResult_$c/= -}
8451b292cb97c0d0120457fc38305c36
  $fEqTestResult_$c/= ::
    Main.TestResult -> Main.TestResult -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LS),1*U(A,1*U)><S,1*U(A,1*U)>, Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Main.TestResult) (y :: Main.TestResult) ->
                 case x of wild { Main.Res ds b ->
                 case y of wild1 { Main.Res ds1 b' ->
                 case b of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case b' of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
8451b292cb97c0d0120457fc38305c36
  $fEqTestResult_$c== ::
    Main.TestResult -> Main.TestResult -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LS),1*U(A,1*U)><S,1*U(A,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Main.TestResult) (ds1 :: Main.TestResult) ->
                 case ds of wild { Main.Res ds2 b ->
                 case ds1 of wild1 { Main.Res ds3 b' -> GHC.Classes.&& b b' } }) -}
8451b292cb97c0d0120457fc38305c36
  $fShowTestResult :: GHC.Show.Show Main.TestResult
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.TestResult
                  Main.$fShowTestResult_$cshowsPrec
                  Main.$fShowTestResult_$cshow
                  Main.$fShowTestResult_$cshowList -}
8451b292cb97c0d0120457fc38305c36
  $fShowTestResult1 ::
    Main.TestResult -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U(U,A)><L,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Main.TestResult) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Res ww1 ww2 -> Main.$w$cshowsPrec ww1 w1 }) -}
8451b292cb97c0d0120457fc38305c36
  $fShowTestResult_$cshow :: Main.TestResult -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.TestResult) ->
                 case ds of wild { Main.Res i ds1 ->
                 Data.Text.Prettyprint.Doc.Internal.$fShowDoc_$cshow
                   @ SEDEL.PrettyPrint.FAnn
                   i }) -}
8451b292cb97c0d0120457fc38305c36
  $fShowTestResult_$cshowList :: [Main.TestResult] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.TestResult]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.TestResult
                   Main.$fShowTestResult1
                   ls
                   s) -}
8451b292cb97c0d0120457fc38305c36
  $fShowTestResult_$cshowsPrec ::
    GHC.Types.Int -> Main.TestResult -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U(U,A)><L,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.TestResult)
                   (w2 :: GHC.Base.String) ->
                 case w1 of ww { Main.Res ww1 ww2 -> Main.$w$cshowsPrec ww1 w2 }) -}
5fe37f5fb4d3117bf29b2661e7fce293
  $tc'Res :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13945716518537987811##
                   12227096381220227128##
                   Main.$trModule
                   Main.$tc'Res2
                   0#
                   Main.$tc'Res1) -}
17f98e7136ce9e34e5c79eb9b2072de0
  $tc'Res1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
95a80543ac5c18aab8bcac6e2e4ee927
  $tc'Res2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Res3) -}
7e96edcbf768af827e2eaf950b065be7
  $tc'Res3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Res"#) -}
08ffebd0905a2a0bf481a5a0dc998ae8
  $tcTestResult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10021583494303789957##
                   7199385169213921216##
                   Main.$trModule
                   Main.$tcTestResult1
                   0#
                   GHC.Types.krep$*) -}
f9304d630b9b9eb73420e5730e9828a4
  $tcTestResult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcTestResult2) -}
9257703f6c73b5bc974c521cf85ebcc3
  $tcTestResult2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TestResult"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
0ae71b35ba46732c51d35988ba65aa55
  $w$cshowsPrec ::
    SEDEL.PrettyPrint.FDoc -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: SEDEL.PrettyPrint.FDoc)
                   (w :: GHC.Base.String) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Data.Text.Prettyprint.Doc.Internal.renderShowS
                      @ SEDEL.PrettyPrint.FAnn
                      (Data.Text.Prettyprint.Doc.Internal.layoutWadlerLeijen
                         @ SEDEL.PrettyPrint.FAnn
                         (Data.Text.Prettyprint.Doc.Internal.$fShowDoc5
                            @ SEDEL.PrettyPrint.FAnn)
                           `cast`
                         (Sym (Data.Text.Prettyprint.Doc.Internal.N:FittingPredicate[0]
                                   <SEDEL.PrettyPrint.FAnn>_R))
                         Data.Text.Prettyprint.Doc.Internal.$fShowDoc2
                           `cast`
                         (Sym (Data.Text.Prettyprint.Doc.Internal.N:LayoutOptions[0]))
                         ww)
                      (GHC.Types.[] @ GHC.Types.Char))
                   w) -}
8451b292cb97c0d0120457fc38305c36
  data TestResult = Res SEDEL.PrettyPrint.FDoc GHC.Types.Bool
95f1e15c2f7b38dcdd2d86736db87bba
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
fd9d6fd8e48b0812d7b631c5f6ae14da
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Directory.getDirectoryContents1
                        Main.testPath
                        s of ds { (#,#) ipv ipv1 ->
                 case System.IO.Error.modifyIOError1
                        @ GHC.IO.FilePath
                        System.Directory.Internal.Common.getCurrentDirectory6
                        System.Directory.Internal.Common.getCurrentDirectory2
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R))
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case System.Posix.Directory.changeWorkingDirectory1
                        (System.FilePath.Posix.combine ipv3 Main.testPath)
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 case (Main.main13
                         Main.main7
                         (Main.main6 ipv1)
                           `cast`
                         (Sym (GHC.Types.N:IO[0]
                                   <((),
                                     [Test.Hspec.Core.Tree.SpecTree
                                        ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                             <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                             <GHC.Types.IO>_R
                                                             <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                                <()>_N) <()>_N)))
                        `cast`
                      (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                           <()>_N <()>_N ; (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                <GHC.Types.IO>_R
                                                <()>_N ; GHC.Types.N:IO[0]
                                                             <((),
                                                               [Test.Hspec.Core.Tree.SpecTree
                                                                  ()])>_R))
                        ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                 case System.Posix.Directory.changeWorkingDirectory1
                        ipv3
                        ipv6 of ds4 { (#,#) ipv8 ipv9 ->
                 Test.Tasty.CmdLine.defaultMainWithIngredients1
                   Test.Tasty.defaultIngredients
                   (Test.Tasty.Core.TestGroup
                      Main.main4
                      (GHC.Types.:
                         @ Test.Tasty.Core.TestTree
                         (Test.Tasty.Core.TestGroup
                            Main.main2
                            (case ipv7 of wild { (,) a1 w2 ->
                             GHC.Base.map
                               @ (Test.Hspec.Core.Tree.Tree
                                    (Test.Hspec.Core.Example.ActionWith ())
                                    (Test.Hspec.Core.Tree.Item ()))
                               @ Test.Tasty.Core.TestTree
                               Test.Tasty.Hspec.specTreeToTestTree
                               w2 }))
                         (GHC.Types.[] @ Test.Tasty.Core.TestTree)))
                   ipv8 } } } } }) -}
48a69d28791eaa1db3944cb898471f27
  main10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("]"#) -}
309a340bfd6af9c246fd59f2d29f32d5
  main11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("examples"#) -}
2a6b24ef2ce4ad3f1235c232c652a376
  main12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Test suite ["#) -}
b687ecca6324f66d1ed7f276e2fadb2b
  main13 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main14
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
08a6a1215bb4dcbd4b38fb9564fbb40c
  main14 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main23
                   Main.main15
                   GHC.Stack.Types.EmptyCallStack) -}
5d7ba97f3e8bd441bc695ddaddb794ee
  main15 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main22
                   Main.main21
                   Main.main19
                   Main.main18
                   Main.main17
                   Main.main18
                   Main.main16) -}
04efdf8a313d53caa6fa1eb3170d92eb
  main16 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 47#) -}
75075ce7d051f4848ebf60b7dd254242
  main17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
a2e2f8cdd4f760ac2e136ef3353978ec
  main18 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 34#) -}
07ae4a27b980f0a299a82dfeac8122b8
  main19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main20) -}
71cc49b8b117350fbf3c1f3b4731a142
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main3) -}
df5896769c58a8df69f60b804ed0d27c
  main20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test/Spec.hs"#) -}
cf4c7a7b65f95818bcb7e4330c038a66
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
c037918051f2b0185bfc2edb95916f7e
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
57404b0452779bff555bd2803b1344c7
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main24) -}
0d0e53d520d8674a7c9d844b187dba75
  main24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("describe"#) -}
09057b1f5c3571ee9f0b1a4fe3c7ff32
  main25 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
711bdd9e024ab41eff9a3fc740c919c1
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Unit tests"#) -}
9f4d1976b20fe307cee5aa35ca860b68
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main5) -}
b4d1824738cc00186fb9ad11c757823e
  main5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" SEDEL tests"#) -}
cb628a605532d8d7c9e5e0a76d235268
  main6 ::
    [[GHC.Types.Char]]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
8ccdb456297f1ea7e518b7dca04a81fb
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Main.main12
                   Main.main8) -}
92c6c5ace1f22330cc29ca7b4e0a1b69
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Main.testPath
                   Main.main9) -}
12a222bd95991732d45689d3b57b1ce2
  main9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main10) -}
cde56fc4949cec934131e3f9cfc64cbc
  testPath :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString# Main.main11) -}
instance GHC.Classes.Eq [Main.TestResult] = Main.$fEqTestResult
instance GHC.Show.Show [Main.TestResult] = Main.$fShowTestResult
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

